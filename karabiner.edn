{
    :profiles {
        :Default {
            :default true
            :sim      200 ; keys need to be pressed within this threshold to be considered simultaneous
            :simlayer-threshold 250 ; ???????
            :alone    300 ; hold for 495ms and single tap registered; hold for 505ms and seen as modifier
            :delay    300 ; time after which the key press is count delayed
            :held     350 ; key is fired twice when 1000 ms is elapsed (otherwise seen as a hold command)
        }
    }

    :devices {
        :velocifire [{:vendor_id 1452 :product_id 591}]
    }

    :templates {
        :open "osascript -e 'tell application \"%s\" to activate'"
        :paste "osascript -e '
              set the clipboard to \"%s\"
              set the clipboard to the clipboard + \"%s\"
              tell application \"System Events\"
                      keystroke \"v\" using command down
              end tell
              '"
        :sleep "sleep %s" ; sample placeholder
        :set_keyboard "set_keyboard_layout %s"
      }

    :applications {
        :kitty [ "net.kovidgoyal.kitty" ]
        :safari [ "^com.apple.Safari$" ]
        :vscode [ "^com.microsoft.VSCode$" ]
        :chrome [ "^com.operasoftware.Opera$" ]
    }

    :froms {
        :any_key {:any :key_code}
        :any_consumer {:any :consumer_key_code }
        :any_button {:any :pointing_button}

        ;alias
        :delete {:key :delete_or_backspace}
        :return {:key :return_or_enter}
        :btick {:key :grave_accent_and_tilde}
        :bslash {:key :backslash}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ;colemak froms (for easier mnemonics)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :p}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    }

    :tos {
        ;colemak tos (for easier string sending)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :semicolon}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    
        ;named symbols
        :exclaim {:key :1 :modi :shift}
        :at {:key :2 :modi :shift}
        :hash {:key :3 :modi :shift}
        :dollar {:key :4 :modi :shift}
        :percent {:key :5 :modi :shift}
        :caret {:key :6 :modi :shift}
        :ampersand {:key :7 :modi :shift}
        :bullet {:key :8 :modi :shift}
        :open_paren {:key :9 :modi :shift}
        :close_paren {:key :0 :modi :shift}
        :hyphen {:key :hyphen}
        :underscore {:key :hyphen :modi :shift}
        :equal {:key :equal_sign}
        :plus {:key :equal_sign :modi :shift}
        :semicolon {:key :semicolon}
        :colon {:key :semicolon :modi :shift}
        :open_bracket {:key :open_bracket}
        :close_bracket {:key :close_bracket}
        :open_brace {:key :open_bracket :modi :shift}
        :close_brace {:key :close_bracket :modi :shift}
        :less_than {:key :comma :modi :shift}
        :greater_than {:key :period :modi :shift}
        :backquote {:key :grave_accent_and_tilde}
        :tilde {:key :grave_accent_and_tilde :modi :shift}
        :dquote {:key :quote :modi :shift}
        :pipe {:key :backslash :modi :shift}
        :question {:key :slash :modi :shift}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ; system-wide shortcuts
        :command_tab {:key :!Ctab}
        :left_desktop {:key :!!left_arrow}
        :right_desktop {:key :!!right_arrow} 
        :mission_control {:key :!!up_arrow}
        :internet_query {:key :!!t}
        :show_application_windows {:key :!!down_arrow}
        :show_desktop {:key :f11}
        :activate_spotlight {:key :!!spacebar}
        :fullscreen_snapshot {:key :!CS3}
        :window_snapshot {:key :!CS4}
        :selection_snapshot {:key :!CS5}
        :emoji_picker {:key :spacebar :modi [:control :command]} ;!CTspacebar
        :system-new_tab {:key :!Ct}
        :system-close_tab {:key :!Cw}
        :system-force_quit_apps {:key :!COescape}

        ; 1password
        :activate_1password {:key :!!backslash}
        ; hazeover - focus on one window
        :activate_hazeover {:key :!!return_or_enter}
        ; mosaic - window positioning
        :window_left_half {:key :!!j}
        :window_resize_and_right {:key :!!l}
        :window_resize_and_center {:key :!!k}
        :window_full_size {:key :!!i}
        :window_center {:key :!!semicolon}
        ; vscode
        :toggle_terminal_or_editor {:key :!Tgrave_accent_and_tilde}
        :focus_group_or_terminal_left {:key :!CTOup_arrow}
        :focus_group_or_terminal_right {:key :!CTOdown_arrow}
        :focus_editor_left {:key :!COleft_arrow}
        :focus_editor_right {:key :!COright_arrow}
        :focus_file_or_new_tab {:key :!Cp}
        ; TODO find a valid way to express this or propose a patch so that it becomes a valid definition
        ; :vscode-markdown_preview {:key [:!Ck :v]}
        ; kitty
        :kitty-prev_tab {:key :!Cleft_arrow}
        :kitty-next_tab {:key :!Cright_arrow}
        :kitty-move_tab_left {:key :!COleft_arrow}
        :kitty-move_tab_right {:key :!COright_arrow}
        :kitty-word_left {:key :!Tleft_arrow}
        :kitty-word_right {:key :!Tright_arrow}
        :kitty-beginning_of_line {:key :!Ta}
        :kitty-end_of_line {:key :!Te}
        :kitty-tmux_prefix {:key :!Tb}
        ; safari
        :safari-prev_tab {:key :!TStab}
        :safari-next_tab {:key :!Ttab}
        :safari-hist_back {:key :!Copen_bracket}
        :safari-hist_frwd {:key :!Cclose_bracket}
        :safari-toggle_reader {:key :!CSr}
        ; chrome
        :chrome-prev_tab {:key :!TStab}
        :chrome-next_tab {:key :!Ttab}
        :chrome-toggle_reader {:key :!CSr}
        ; opera
        :opera-prev_tab {:key :!COleft_arrow}
        :opera-next_tab {:key :!COright_arrow}
    }

    :simlayers {
        :desqtop {:key :q}
        :windows {:key :w}
        ;; :apps {:key :e}
        :apps {:key :tab}
        ;; :extend {:key :f}
    }

    :main [
        {
            :des "Press RShift-Spacebar to deactivate all layers (including Colemak)"
            :rules [
                [:!Rspacebar ["blocked" 1] :!blocked]
                [:!Rspacebar ["blocked" 0] :blocked]
            ]
        }
        {
            :des "Window Positioning Layer"
            :rules [
                :windows
                    ; window positioning using rectangle 
                    [:n :window_left_half]
                    [:e :window_resize_and_center]
                    [:i :window_resize_and_right]
                    [:u :window_full_size]
                    [:o :window_center]
                    [:quote :window_snapshot]
                    [:h :system-force_quit_apps]
            ]
        }
        {
            :des "Extend Layer"
            :rules [
                ;
                ; per-app shortcuts
                ;
                ; vscode
                [:!COTcomma :focus_editor_left :vscode]
                [:!COTperiod :focus_editor_right :vscode]
                [:!COTslash :toggle_terminal_or_editor :vscode]
                [:left_option :left_option :vscode {:alone :toggle_terminal_or_editor}]
                ; kitty
                [:!COTcomma :kitty-prev_tab :kitty]
                [:!COTperiod :kitty-next_tab :kitty]
                [:!COTslash :kitty-tmux_prefix :kitty]
                [:left_option :left_option :kitty {:alone :kitty-tmux_prefix}]
                ; safari
                [:!COTcomma :safari-prev_tab :safari]
                [:!COTperiod :safari-next_tab :safari]
                [:!COTslash :safari-toggle_reader :safari]
                [:left_option :left_option :safari {:alone :safari-toggle_reader}]
                ; chrome
                [:!COTcomma :safari-prev_tab :chrome]
                [:!COTperiod :safari-next_tab :chrome]
                [:!COTslash :safari-toggle_reader :chrome]
                [:left_option :left_option :chrome {:alone :chrome-toggle_reader}]
                ; opera
                [:!COTcomma :opera-prev_tab :opera]
                [:!COTperiod :opera-next_tab :opera]
                ;
                [:!COTk :!Cgrave_accent_and_tilde]
                [:!COTm :!Ctab]
                [:left_command :left_command nil {:alone :!Ctab}]
            ]
        }

        {
            :des "Application Layer - press A to trigger"
            :rules [
                :apps
                    ; most used apps
                    [:w [:open "WhatsApp"]]              ; whatsapp
                    [:t [:open "Kitty"]]                 ; kitty
                    [:g [:open "Signal"]]                ; signal
                    [:l [:open "Telegram"]]              ; telegram
                    [:d [:open "Drafts"]]                ; drafts
                    [:n [:open "Opera"]]                 ; navigator
                    [:e [:open "Visual Studio Code"]]    ; editor
                    [:u [:open "Type Fu"]]               ; typeFu
                    [:m [:open "Mailmate"]]              ; mail
                    ; others
                    [:slash :activate_1password]          ; password_manager
                    [:y :internet_query]                  ; internet querY
                    [:delete_or_backspace :activate_spotlight] ; spotlight
                    [:comma [:set_keyboard "m1"]]
                    [:period [:set_keyboard "kyria"]]
            ]
        }

        {
            :des "Desktop Layer - press Q to trigger"
            :rules [
                :desqtop
                    ; system layer substitutes
                    [:comma :left_desktop]
                    [:period :right_desktop]
                    [:l :mission_control]
                    [:y :show_application_windows]
                    ; switch to desktop
                    [:n :!!1]
                    [:e :!!2]
                    [:i :!!3]
                    [:o :!!4]
                    [:quote :!!5]
            ]
        }

        ; {
        ;     :des "Symbols & Emoji - use backtick to do the same as LShift (a bit better on Apple KB)"
        ;     :rules [
        ;         ; trigger symbols layer
        ;         [:btick :left_shift [:!symbols :!shifted] {:alone ["symbols" 1] :delayed {:invoked ["symbols" 0] :cancelled ["symbols" 0]}}]
        ;         ; trigger emoji layer - while we're in the shifted layer
        ;         [:btick ["emoji" 1] [:shifted] {:afterup ["shifted" 0] :delayed {:invoked ["emoji" 0]}}]
        ;         :symbols
        ;             [:btick :colon nil {:afterup ["symbols" 0]}]                         ; ?
        ;         :emoji
        ;             [:btick :emoji_picker nil {:afterup ["emoji" 0]}] ;
        ;     ]
        ; }
    ]
}

;; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

;; !  | means mandatory -   modifier(s) alone when pressend change behavior
;; #  | means optional  -   modifiers are optional (but atleast one necessary)

;; :!Ca is keycode :a and prefix a with !C

;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock

;; ## | optional any (this has no effect when used on the RHS; only LHS)
;; !! | command + control + optional + shift (hyper)

;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

;; need to prefix C T O S F P with ! or #
;;
;; code for all this:
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68 

;; URL of extend layer - https://forum.colemak.com/topic/2014-extend-extra-extreme/
