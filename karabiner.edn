{
    :profiles {
        :Default {
            :default true
            :sim      200 ; keys need to be pressed within this threshold to be considered simultaneous
            :simlayer-threshold 450 ; ???????
            :delay    500 ; time after which the key press is count delayed
            :alone    500 ; hold for 495ms and single tap registered; hold for 505ms and seen as modifier
            :held    1000 ; key is fired twice when 1000 ms is elapsed (otherwise seen as a hold command)
        }
    }

    :devices {
        :velocifire [{:vendor_id 1452 :product_id 591}]
    }

    :templates {
        :open "osascript -e 'tell application \"%s\" to activate'"
        :paste "osascript -e '
              set the clipboard to \"%s\"
              set the clipboard to the clipboard + \"%s\"
              tell application \"System Events\"
                      keystroke \"v\" using command down
              end tell
              '"
        :sleep "sleep %s" ; sample placeholder
    }

    :applications {
        :kitty [ "net.kovidgoyal.kitty" ]
        :safari [ "^com.apple.Safari$" ]
        :vscode [ "^com.microsoft.VSCode$" ]
    }

    :froms {
        :any_key {:any :key_code}
        :any_consumer {:any :consumer_key_code }
        :any_button {:any :pointing_button}

        ;alias
        :delete {:key :delete_or_backspace}
        :return {:key :return_or_enter}
        :btick {:key :grave_accent_and_tilde}
        :bslash {:key :backslash}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ;colemak froms (for easier mnemonics)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :p}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    }

    :tos {
        ;colemak tos (for easier string sending)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :semicolon}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    
        ;named symbols
        :exclaim {:key :1 :modi :shift}
        :at {:key :2 :modi :shift}
        :hash {:key :3 :modi :shift}
        :dollar {:key :4 :modi :shift}
        :percent {:key :5 :modi :shift}
        :caret {:key :6 :modi :shift}
        :ampersand {:key :7 :modi :shift}
        :bullet {:key :8 :modi :shift}
        :open_paren {:key :9 :modi :shift}
        :close_paren {:key :0 :modi :shift}
        :hyphen {:key :hyphen}
        :underscore {:key :hyphen :modi :shift}
        :equal {:key :equal_sign}
        :plus {:key :equal_sign :modi :shift}
        :semicolon {:key :semicolon}
        :colon {:key :semicolon :modi :shift}
        :open_bracket {:key :open_bracket}
        :close_bracket {:key :close_bracket}
        :open_brace {:key :open_bracket :modi :shift}
        :close_brace {:key :close_bracket :modi :shift}
        :less_than {:key :comma :modi :shift}
        :greater_than {:key :period :modi :shift}
        :backquote {:key :grave_accent_and_tilde}
        :tilde {:key :grave_accent_and_tilde :modi :shift}
        :dquote {:key :quote :modi :shift}
        :pipe {:key :backslash :modi :shift}
        :question {:key :slash :modi :shift}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ; system-wide shortcuts
        :command_tab {:key :!Ctab}
        :left_desktop {:key :!!left_arrow}
        :right_desktop {:key :!!right_arrow} 
        :mission_control {:key :!!up_arrow}
        :internet_query {:key :!!t}
        :show_application_windows {:key :!!down_arrow}
        :show_desktop {:key :!!f12}
        :activate_spotlight {:key :!!spacebar}
        :fullscreen_snapshot {:key :!CS3}
        :window_snapshot {:key :!CS4}
        :selection_snapshot {:key :!CS5}
        :emoji_picker {:key :spacebar :modi [:control :command]} ;!CTspacebar
        :system-new_tab {:key :!Ct}
        :system-close_tab {:key :!Cw}
        :system-force_quit_apps {:key :!COescape}

        ; 1password
        :activate_1password {:key :!!backslash}
        ; hazeover - focus on one window
        :activate_hazeover {:key :!!return_or_enter}
        ; mosaic - window positioning
        :window_align_left {:key :!!u}
        :window_align_right {:key :!!o}
        :window_center {:key :!!i}
        :window_full_size {:key :!!p}
        ; vscode
        :toggle_terminal_or_editor {:key :!Cspacebar}
        :focus_group_or_terminal_left {:key :!CTOup_arrow}
        :focus_group_or_terminal_right {:key :!CTOdown_arrow}
        :focus_editor_left {:key :!COleft_arrow}
        :focus_editor_right {:key :!COright_arrow}
        :focus_file_or_new_tab {:key :!Cp}
        ; TODO find a valid way to express this or propose a patch so that it becomes a valid definition
        ; :vscode-markdown_preview {:key [:!Ck :v]}
        ; kitty
        :kitty-prev_tab {:key :!Cleft_arrow}
        :kitty-next_tab {:key :!Cright_arrow}
        :kitty-move_tab_left {:key :!COleft_arrow}
        :kitty-move_tab_right {:key :!COright_arrow}
        :kitty-word_left {:key :!Tleft_arrow}
        :kitty-word_right {:key :!Tright_arrow}
        :kitty-beginning_of_line {:key :!Ta}
        :kitty-end_of_line {:key :!Te}
        :kitty-tmux_prefix {:key :!Tb}
        ; safari
        :safari-prev_tab {:key :!TStab}
        :safari-next_tab {:key :!Ttab}
        :safari-hist_back {:key :!Copen_bracket}
        :safari-hist_frwd {:key :!Cclose_bracket}
        :safari-toggle_reader {:key :!CSr}
    }

    :simlayers {
        :apps {:key :a}
        :desktop {:key :f}
    }

    :main [
        {
            :des "Power Layer / Per App - p (quick release for primary combo)"
            :rules [
                ; vscode - power layer triggering
                ; [:p ["power" 1] [:vscode :!symbols] {:alone :toggle_terminal_or_editor :afterup ["power" 0] :delayed {:invoked ["power" 0] :cancelled ["power" 0]}}]
                ; vscode - actual layer functions
                [:-v [:!Ck :v] [:vscode :power :!symbols]]                                          ; preView (markdown)
                [:-p [:!Cp :!Speriod :g :i :t :l :e :n :s :spacebar] [:vscode :power :!symbols]]    ; gitlens: Palette
                [:-g [:!Cp :!Speriod :g :i :t :!Ssemicolon :spacebar] [:vscode :power :!symbols]]   ; git: palette
                [:-c [:!COTSg :c] [:vscode :power :!symbols]]                                       ; git commit
                [:-q [:!COTSg :y] [:vscode :power :!symbols]]                                       ; git synQ
                ; vscode - scrubbing - undefine all unused keys
                [:any_key :vk_none [:vscode :power :!symbols]]
                [:any_consumer :vk_none [:vscode :power :!symbols]]
                ;
                ; TODO more to be added here, per app
            ]
        }

        {
            :des "Application Layer - press A to trigger"
            :rules [
                :apps
                    ; most used apps
                    [:-w [:open "WhatsApp"]]              ; whatsapp
                    [:-k [:open "Kitty"]]                 ; kitty
                    [:-g [:open "Signal"]]                ; signal
                    [:-t [:open "Telegram"]]              ; telegram
                    [:-s [:open "Drafts"]]                ; drafts
                    [:-v [:open "Preview"]]               ; preView
                    [:-n [:open "Safari"]]                ; navigator
                    [:-e [:open "Visual Studio Code"]]    ; editor
                    [:-f [:open "Type Fu"]]               ; typeFu
                    [:-m [:open "Mailmate"]]              ; mail
                    ; others
                    [:-p :activate_1password]             ; password_manager
                    [:-y :internet_query]                 ; internet querY
                    [:spacebar :activate_spotlight]       ; spotlight
            ]
        }

        {
            :des "Desktop Layer - press F to trigger"
            :rules [
                :desktop
                    [:j :!!1]
                    [:k :!!2]
                    [:l :!!3]
                    [:semicolon :!!4]
                    [:quote :!!5]
            ]
        }

        {
            :des "System Layer - press Fn to trigger (Esc, too, on Velocifire)"
            :rules [
                [:fn ["system" 1] nil {:afterup ["system" 0] :alone :show_desktop}]
                [:escape ["system" 1] [:!mouse :velocifire] {:afterup ["system" 0] :alone :show_desktop}]
                :system
                    ; global shortcuts
                    [:spacebar :system-force_quit_apps]
                    [:u :mission_control]
                    [:o :show_application_windows]
                    ; snapshots
                    [:q :fullscreen_snapshot]
                    [:w :window_snapshot]
                    ; focus on one window (triggers Hazeover)
                    [:return_or_enter :activate_hazeover]
                    ; window positioning (triggers Rectangle)
                    [:j :window_align_left]
                    [:k :window_center]
                    [:l :window_align_right]
                    [:i :window_full_size]
            ]
        }

        {
            :des "Safari Layer - Application Specific Shortcuts"
            :rules [
                :safari
                    ; power key - toggle reader mode
                    [:f24 :safari-toggle_reader :safari]
                    [:!Cperiod :safari-hist_frwd]
                    [:!Ccomma :safari-hist_back]
                    ; while in the extend layer
                    [:comma :safari-prev_tab [:safari :extend]]
                    [:period :safari-next_tab [:safari :extend]]
            ]
        }


        {
            :des "Kitty Layer - Application Specific Shortcuts"
            :rules [
                :kitty
                    ; power key - tmux prefix
                    [:f24 :kitty-tmux_prefix :kitty]
                    [:!Ccomma :kitty-move_tab_left :kitty]
                    [:!Cperiod :kitty-move_tab_right :kitty]
                    ; while in the extend layer
                    [:u :kitty-beginning_of_line [:kitty :extend]]
                    [:o :kitty-end_of_line [:kitty :extend]]
                    [:!Cu :kitty-word_left [:kitty :extend]]
                    [:!Co :kitty-word_right [:kitty :extend]]
                    [:comma :kitty-prev_tab [:kitty :extend]]
                    [:period :kitty-next_tab [:kitty :extend]]
            ]
        }


        {
            :des "VSCode Layer - Application Specific Shortcuts"
            :rules [
                :vscode
                    ; power key - toggle between terminal or editor
                    [:f24 :toggle_terminal_or_editor :vscode]
                    [:right_option :left_control :!command {:alone :focus_file_or_new_tab}]
                    [:!Ccomma :focus_editor_left]
                    [:!Cperiod :focus_editor_right]
                    ; while in the extend layer
                    [:comma :focus_group_or_terminal_left [:vscode :extend]]
                    [:period :focus_group_or_terminal_right [:vscode :extend]]
            ]
        }

        {
            :des "Symbols & Emoji - use backtick to do the same as LShift (a bit better on Apple KB)"
            :rules [
                ; trigger symbols layer
                [:btick :left_shift [:!symbols :!shifted] {:alone ["symbols" 1] :delayed {:invoked ["symbols" 0] :cancelled ["symbols" 0]}}]
                ; trigger emoji layer - while we're in the shifted layer
                [:btick ["emoji" 1] [:shifted] {:afterup ["shifted" 0] :delayed {:invoked ["emoji" 0]}}]
                :symbols
                    [:btick :colon nil {:afterup ["symbols" 0]}]                         ; ?
                :emoji
                    [:btick :emoji_picker nil {:afterup ["emoji" 0]}] ;
            ]
        }

        {
            :des "Emoji Layer - while in the Shifted layer, press LShift to trigger"
            :rules [
                ; trigger emoji layer - while we're in the shifted layer
                [:left_shift ["emoji" 1] [:shifted] {:afterup ["shifted" 0] :delayed {:invoked ["emoji" 0]}}]
                :emoji
                    [:left_shift :emoji_picker [:emoji] {:afterup ["emoji" 0]}]
                    [:-q [:paste "🤫"] nil {:afterup ["emoji" 0]}] ;quiet
                    [:-w [:paste "😉"] nil {:afterup ["emoji" 0]}] ;wink
                    [:-f [:paste "🤦‍♂️"] nil {:afterup ["emoji" 0]}] ;facepalm️
                    [:-p [:paste "🎉"] nil {:afterup ["emoji" 0]}] ;party
                    [:-g [:paste "😬"] nil {:afterup ["emoji" 0]}] ;grimace
                    [:-j [:paste "😂"] nil {:afterup ["emoji" 0]}] ;joking
                    [:-l [:paste "😍"] nil {:afterup ["emoji" 0]}] ;love it
                    [:-u [:paste "🤷‍♂️"] nil {:afterup ["emoji" 0]}] ;shrUg
                    [:-y [:paste "😡"] nil {:afterup ["emoji" 0]}] ;angrY
                    [:-a [:paste "👍"] nil {:afterup ["emoji" 0]}] ;alright
                    [:-r [:paste "🚀"] nil {:afterup ["emoji" 0]}] ;rocket
                    [:-s [:paste "😢"] nil {:afterup ["emoji" 0]}] ;sad
                    [:-t [:paste "🤔"] nil {:afterup ["emoji" 0]}] ;thinking
                    [:-d [:paste "😮"] nil {:afterup ["emoji" 0]}] ;damn!
                    [:-h [:paste "💜"] nil {:afterup ["emoji" 0]}] ;heart
                    [:-n [:paste "👎"] nil {:afterup ["emoji" 0]}] ;nope
                    [:-e [:paste "🙂"] nil {:afterup ["emoji" 0]}] ;smilE
                    [:-i [:paste "👀"] nil {:afterup ["emoji" 0]}] ;I
                    [:-o [:paste "💩"] nil {:afterup ["emoji" 0]}] ;pOop
                    [:-x [:paste "😵"] nil {:afterup ["emoji" 0]}] ;x-eyes
                    [:-c [:paste "👏"] nil {:afterup ["emoji" 0]}] ;clap
                    [:-v [:paste "😎"] nil {:afterup ["emoji" 0]}] ;very cool
                    [:-b [:paste "😊"] nil {:afterup ["emoji" 0]}] ;blush
                    [:-k [:paste "🍺"] nil {:afterup ["emoji" 0]}] ;drink
                    [:-m [:paste "🙏"] nil {:afterup ["emoji" 0]}] ;merçi
                    ; scrubbing - undefine all unused keys
                    [:any_key :vk_none nil {:afterup ["emoji" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["emoji" 0]}]
            ]
        }

        {
            :des "MultiTouch Layer - hold finger(s) on trackpad to trigger"
            :rules [
                ; 1 finger resting on the trackpad
                [:condi ["multitouch_extension_finger_count_total" 1]]
                    [:-w :!Cw]
                    [:-p :!Ct]
                    [:-s {:pkey :button1 :modi :left_shift}]
                    [:-t {:pkey :button1}]
                    [:-d {:pkey :button1 :modi :left_command}]
                    [:grave_accent_and_tilde :!Tgrave_accent_and_tilde]
                    [:-z :!Cz]
                    [:-x :!Cx]
                    [:-c :!Cc]
                    [:-v :!Cv]
                    [:-b :!CT1]
                    [:spacebar :return_or_enter]
                    [:a :delete_or_backspace]
                ; 2 fingers resting on the trackpad
                [:condi ["multitouch_extension_finger_count_total" 2]]
                    [:-s :selection_snapshot]
                    [:-t :window_snapshot]
                    [:-d :fullscreen_snapshot]
            ]
        }

        {
            :des "Right Command to Cmd+Tab on release, acts as LCtrl on hold"
            :rules [
                [:right_command :left_control nil {:alone :command_tab}]
            ]
        }

        {
            :des "Double Press Cmd+Q to Quit Applications"
            :rules [
                [:!C#Pq [:!Cq ["command-q" 0]] ["command-q" 1]]
                [:!C#Pq ["command-q" 1] nil {:delayed {:invoked ["command-q" 0] :canceled ["commandq" 0]}}]
            ]
        }
    ]
}

;; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

;; !  | means mandatory -   modifier(s) alone when pressend change behavior
;; #  | means optional  -   modifiers are optional (but atleast one necessary)

;; :!Ca is keycode :a and prefix a with !C

;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock

;; ## | optional any (this has no effect when used on the RHS; only LHS)
;; !! | command + control + optional + shift (hyper)

;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

;; need to prefix C T O S F P with ! or #
;;
;; code for all this:
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68 

;; URL of extend layer - https://forum.colemak.com/topic/2014-extend-extra-extreme/
